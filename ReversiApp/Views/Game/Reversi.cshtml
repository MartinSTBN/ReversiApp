@model Game

@{
    ViewData["Title"] = "Reversi";
}

@if (Model.Spelers.Count < 2)
{
    <form asp-action="Delete" asp-controller="Games" asp-route-id="@Model.GameID">
        <input type="hidden" asp-for="GameID" />
        <input type="submit" value="Leave game room" class="btn btn-danger" />
    </form>
}

<h1>Room: @Model.Omschrijving</h1>

@foreach (var speler in Model.Spelers)
{
    <p>Player @speler.Kleur : @speler.Email</p> 
}
<p id="AanDeBeurt"></p>

<div class="container" hidden>
    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-2">User</div>
        <div class="col-4"><input type="text" id="userInput" /></div>
    </div>
    <div class="row">
        <div class="col-2">Message</div>
        <div class="col-4"><input type="text" id="messageInput" /></div>
    </div>
    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-6">
            <input type="button" id="sendButton" value="Send Message" />
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <hr />
    </div>
</div>
<div class="row">
    <div class="col-6">
        <ul id="messagesList"></ul>
    </div>
</div>

<table id="Bord">

    @for (var i = 0; i <= Model.Bord.GetUpperBound(0); i++)
    {
        <tr></tr>
        @for (var j = 0; j <= Model.Bord.GetUpperBound(1); j++)
        {
            <td class="cell" id="@i @j"></td>
        }
    }

</table>

<script src="~/js/app.js" asp-append-version="true"></script>
<link rel="stylesheet" href="~/css/style.min.css" />
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
    $(function () {
        "use strict";

        var aanDeBeurt = '@Model.AandeBeurt';

        var connection = new signalR.HubConnectionBuilder().withUrl("/gameHub").build();

        connection.on("ReceiveGameData", function (cellId, color, zetMogelijk, stukkenTeSlaan) {
            if (zetMogelijk) {
                if (color == 2) {
                    color = 1;
                    aanDeBeurt = "Zwart"
                } else {
                    color = 2;
                    aanDeBeurt = "Wit";
                }
 
                Game.placeFiche(cellId, color);
                Game.setTitle(aanDeBeurt);

                for (var i = 0; i < stukkenTeSlaan.length; i++) {
                    var split = stukkenTeSlaan[i].split(",");
                    cellId = split[0] + " " + split[1];
                    Game.placeFiche(cellId, color);
                    console.log("Te slaan > " + cellId + " naar kleur " + color);
                }
            } else {
                alert("ZET NIET MOGELIJK!");
            }

        });

        connection.on("ReceiveBordData", function (values, aanDeBeurt) {
            function removeElementsByClass(className) {
                var elements = document.getElementsByClassName(className);
                while (elements.length > 0) {
                    elements[0].parentNode.removeChild(elements[0]);
                }
            }
            removeElementsByClass("fiche-wit");
            removeElementsByClass("fiche-zwart");
            var bordValues = function () {
                for (var i = 0; i < values.length; i++) {
                    var id = values[i].row + " " + values[i].column;
                    var color = values[i].value;
                    var div = document.createElement("div");
                    if (color == 1) {
                        div.className = "fiche-wit";
                    }
                    if (color == 2) {
                        div.className = "fiche-zwart";
                    }
                    document.getElementById(id).appendChild(div);
                }
            }
            bordValues();
            if (aanDeBeurt == 1) {
                aanDeBeurt = "Wit";
            } else {
                aanDeBeurt = "Zwart";
            }
            Game.setTitle(aanDeBeurt);
        });

        connection.on("Test", function (row, column, zetMogelijk) {
            console.log(row + " " + column + " "+ zetMogelijk);

        });

        connection.start().then(function () {
            Game.init('production');
            connection.invoke("GetBordData", "@Model.GameID").catch(function (err) {
                return console.error(err.toString());
            });
            $(".cell").on("click", function () {
                if (aanDeBeurt == '@Model.Speler.Kleur') {
                    connection.invoke("SendGameData", this.id, "@Model.Speler.Kleur", "@Model.GameID").catch(function (err) {
                        return console.error(err.toString());
                    });
                } else {
                    alert(aanDeBeurt + ' is aan de beurt');
                }
            });
        }).catch(function (err) {
            return console.error(err.toString());
        });

    });

</script>
